From 5e3c0220d7e4f0361c4d36c697a8842f2b583402 Mon Sep 17 00:00:00 2001
From: Li Qiang <liq3ea@gmail.com>
Date: Thu, 1 Nov 2018 18:22:43 -0700
Subject: [PATCH] nvme: fix oob access issue(CVE-2018-16847)

Currently, the nvme_cmb_ops mr doesn't check the addr and size.
This can lead an oob access issue. This is triggerable in the guest.
Add check to avoid this issue.

Fixes CVE-2018-16847.

Reported-by: Li Qiang <liq3ea@gmail.com>
Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
Signed-off-by: Li Qiang <liq3ea@gmail.com>
Signed-off-by: Kevin Wolf <kwolf@redhat.com>
---
 hw/block/nvme.c | 7 +++++++
 1 file changed, 7 insertions(+)

Index: qemu-2.11+dfsg/hw/block/nvme.c
===================================================================
--- qemu-2.11+dfsg.orig/hw/block/nvme.c	2018-11-21 14:17:01.519360354 -0500
+++ qemu-2.11+dfsg/hw/block/nvme.c	2018-11-21 14:17:01.511360315 -0500
@@ -898,6 +898,10 @@ static void nvme_cmb_write(void *opaque,
     unsigned size)
 {
     NvmeCtrl *n = (NvmeCtrl *)opaque;
+
+    if (addr + size > NVME_CMBSZ_GETSIZE(n->bar.cmbsz)) {
+        return;
+    }
     memcpy(&n->cmbuf[addr], &data, size);
 }
 
@@ -906,6 +910,9 @@ static uint64_t nvme_cmb_read(void *opaq
     uint64_t val;
     NvmeCtrl *n = (NvmeCtrl *)opaque;
 
+    if (addr + size > NVME_CMBSZ_GETSIZE(n->bar.cmbsz)) {
+        return 0;
+    }
     memcpy(&val, &n->cmbuf[addr], size);
     return val;
 }
