Commit-Id: 2655fffed7a9e765bcb4701dd876e9dab975f289
From: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date: Wed, 8 Jan 2020 00:58:48 +0100
Subject: tcp_emu: Fix oob access
Bug-Debian: http://bugs.debian.org/949084

The main loop only checks for one available byte, while we sometimes
need two bytes.
---
 slirp/tcp_subr.c | 7 +++++++
 1 files changed, 7 insertions(+)

diff --git a/slirp/tcp_subr.c b/slirp/tcp_subr.c
index fa61349cbb0..965d54941e3 100644
--- a/slirp/tcp_subr.c
+++ b/slirp/tcp_subr.c
@@ -887,6 +887,9 @@ tcp_emu(struct socket *so, struct mbuf *m)
 				break;
 
 			 case 5:
+				if (bptr == m->m_data + m->m_len - 1)
+				   return 1; /* We need two bytes */
+
 				/*
 				 * The difference between versions 1.0 and
 				 * 2.0 is here. For future versions of
@@ -902,6 +905,10 @@ tcp_emu(struct socket *so, struct mbuf *m)
 				/* This is the field containing the port
 				 * number that RA-player is listening to.
 				 */
+
+				if (bptr == m->m_data + m->m_len - 1)
+					return 1; /* We need two bytes */
+
 				lport = (((u_char*)bptr)[0] << 8)
 				+ ((u_char *)bptr)[1];
 				if (lport < 6970)
